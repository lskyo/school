写入JS代码
1、嵌入到HTML文档中：
<script type="text/javascript">
	/* 写入JS代码 */
</script>
【注意】JavaScript代码可以放在html文件中任何位置，但是我们一般放在网页的head或者body部分。
2、写入到js文件中：
script.js
//请写入JS代码
index.html
<script src="script.js">...</script>
【注意】在JS文件中，不需要<script>标签,直接编写JavaScript代码就可以了。
----------------------------------------------------------------------------------------------------------
注释
1、单行注释：
//我是单行注释
2、多行注释：
/*
	我是多行注释
*/
----------------------------------------------------------------------------------------------------------
变量的声明与赋值：
var mychar;   //关键字var声明变量mychar
mychar="javascript"; //给mychar赋值
var mynum = 6;   //声明的同时赋值
【注意】
1. 在JS中区分大小写，如变量mychar与myChar是不一样的，表示是两个变量。
2. 变量虽然也可以不声明，直接使用，但不规范，需要先声明，后使用。
----------------------------------------------------------------------------------------------------------
判断语句（if...else...）
if(条件)
{ 条件成立时执行的代码 }
else
{ 条件不成立时执行的代码 }
----------------------------------------------------------------------------------------------------------
函数（function）：
function 函数名()
{
     函数代码;
}
例子：
<script type="text/javascript">
	function contxt() //定义函数
	{
		alert("哈哈，调用函数了!");
	}
</script>
<input type="button"  value="点击我" onclick="contxt()" />  
----------------------------------------------------------------------------------------------------------
输出内容（document.write）
1、输出内容用""括起，直接输出""号内的内容。
document.write("I love JavaScript！");
2、通过变量，输出内容。
var mystr="hello world!";
document.write(mystr);
3、输出多项内容，内容之间用+号连接。
var mystr="hello";
document.write(mystr+"I love JavaScript"); 
4、输出HTML标签，并起作用，标签使用""括起来。
var mystr="hello";
document.write(mystr+"<br>");//输出hello后，输出一个换行符
document.write("JavaScript");
----------------------------------------------------------------------------------------------------------
警告（alert 消息对话框）：
alert(字符串或变量);  
【注意】alert弹出消息对话框(包含一个确定按钮)。
1. 在点击对话框"确定"按钮前，不能进行任何其它操作。
2. 消息对话框通常可以用于调试程序。
3. alert输出内容，可以是字符串或变量，与document.write 相似。
----------------------------------------------------------------------------------------------------------
确认（confirm 消息对话框）：
confirm(str);  
//str：在消息对话框中要显示的文本
//返回值: Boolean值，”确认“返回true，”取消“返回false
【注意】消息对话框是排它的，即用户在点击对话框按钮前，不能进行任何其它操作。
例子：
function rec(){
	var mymessage=confirm("你 是 女 士 吗 ？");
	if(mymessage==true){
    	document.write("你是女士!");
    }
    else{
        document.write("你是男士!");
    }
}    
----------------------------------------------------------------------------------------------------------
提问（prompt 消息对话框）：
prompt(str1, str2);
//str1: 要显示在消息对话框中的文本，不可修改
//str2：文本框中的内容，可以修改
//点击确定按钮，文本框中的内容将作为函数返回值
//点击取消按钮，将返回null
【注意】在用户点击对话框的按钮前，不能进行任何其它操作。
例子：
function rec(){
	var score; //score变量，用来存储用户输入的成绩值。
	score = prompt("请输入你的成绩：","0~100");
	if(score>=90){ document.write("你很棒!");}
	else if(score>=75){ document.write("不错吆!");}
    else if(score>=60){ document.write("要加油!");}
    else{document.write("要努力了!");}
}
----------------------------------------------------------------------------------------------------------
打开新窗口（window.open）：
window.open([URL], [窗口名称], [参数字符串]);
//URL：可选参数，在窗口中要显示网页的网址或路径。如果省略这个参数，或者它的值是空字符串，那么窗口就不显示任何文档。
//窗口名称：可选参数，被打开窗口的名称。
// 1.该名称由字母、数字和下划线字符组成。
// 2."_top"、"_blank"、"_self"具有特殊意义的名称。
// _blank：在新窗口显示目标网页
// _self：在当前窗口显示目标网页
// _top：框架网页中在上部窗口中显示目标网页
// 3.相同 name 的窗口只能创建一个，要想创建多个窗口则 name 不能相同。
// 4.name 不能包含有空格。
//参数字符串：可选参数，设置窗口参数，各参数用逗号隔开。
例子：在新窗口打开http://www.imooc.com网站，大小为300px * 200px，无菜单，无工具栏，无状态栏，有滚动条窗口：
window.open('http://www.imooc.com','_blank','width=300,height=200,menubar=no,toolbar=no, status=no,scrollbars=yes')
----------------------------------------------------------------------------------------------------------
关闭窗口（window.close）：
window.close();   //关闭本窗口
或：
<窗口对象>.close();   //关闭指定的窗口
例子：
var mywin=window.open('http://www.imooc.com'); //将新打的窗口对象，存储在变量mywin中
mywin.close();
----------------------------------------------------------------------------------------------------------
通过ID获取元素：
document.getElementById(“id”);
例子：var mychar=  document.getElementById("con") ; //将获取的元素存储在mychar中
【注意】获取的元素是一个对象（结果:null或[object HTMLParagraphElement]），如想对元素进行操作，我们要通过它的属性或方法。
----------------------------------------------------------------------------------------------------------
innerHTML 属性：
Object.innerHTML //Object是获取的元素对象，如通过document.getElementById("ID")获取的元素。
【注意】innerHTML 属性用于获取或替换 HTML 元素的内容。
例子：
<h2 id="con">javascript</H2>
var mychar=  document.getElementById("con") ;
mychar.innerHTML = "Hello world!"
----------------------------------------------------------------------------------------------------------
改变 HTML 样式：
Object.style.property=new style;  //property为color,fontSize,width等属性
例子：
<p id="pcon">Hello World!</p>
<script>
   var mychar = document.getElementById("pcon");
   mychar.style.color="red";
   mychar.style.fontSize="20";
   mychar.style.backgroundColor ="blue";
</script>
----------------------------------------------------------------------------------------------------------
显示和隐藏（display属性）：
Object.style.display = value
例子：
function hidetext()       //隐藏内容
{  
	var mychar = document.getElementById("con");
	mychar.style.display='none';
}  
function showtext()      //显示内容
{  
	var mychar = document.getElementById("con");
	mychar.style.display='block';
}
----------------------------------------------------------------------------------------------------------
控制类名（className 属性）：
object.className = classname   //为网页内的某个元素指定一个css样式来更改该元素的外观
----------------------------------------------------------------------------------------------------------
移除属性：
Object.removeAttribute('style')//删除指定的属性。如果文档类型声明 (DTD) 为指定的属性设置了默认值，那么接下来调用 getAttribute() 方法将返回那个默认值。
