/****************************************************************************
* 文件名：I2CINT.H
* 功能：硬件I2C软件包，利用中断方式操作。(头文件)
* 说明：主程序要配置好I2C总线接口(I2C引脚功能和I2C中断，并已使能I2C主模式)
****************************************************************************/

#ifndef  I2CINT_H
#define  I2CINT_H

/****************************************************************************
* 名称：IRQ_I2C()
* 功能：I2C中断，通过判断I2C状态字进行相应的操作。
* 入口参数：无
* 出口参数：无
****************************************************************************/
extern  void  __irq  IRQ_I2C(void);



/****************************************************************************
* 名称：ISendByte()
* 功能：向无子地址器件发送一字节数据。
* 入口参数：sla		器件地址
*          dat		要发送的数据
* 出口参数：返回值为0时表示出错，为1时表示操作正确。
* 说明：使用前要初始化好I2C引脚功能和I2C中断，并已使能I2C主模式
****************************************************************************/
extern  uint8  ISendByte(uint8 sla, uint8 dat);



/****************************************************************************
* 名称：ISendStr()
* 功能：向有子地址器件发送多字节数据。
* 入口参数：sla		器件从机地址
*          suba		器件子地址
*          s		数据发送缓冲区指针
*          no		发送数据个数
* 出口参数：返回值为0时表示出错，为1时表示操作正确。
* 说明：使用前要初始化好I2C引脚功能和I2C中断，并已使能I2C主模式
****************************************************************************/
extern  uint8  ISendStr(uint8 sla, uint8 suba, uint8 *s, uint8 no);



/****************************************************************************
* 名称：IRcvByte()
* 功能：向无子地址器件读取一字节数据。
* 入口参数：sla		器件地址
*          dat		接收数据的变量指针
* 出口参数：返回值为0时表示操作出错，为1时表示操作正确。
* 说明：使用前要初始化好I2C引脚功能和I2C中断，并已使能I2C主模式
****************************************************************************/
extern  uint8  IRcvByte(uint8 sla, uint8 *dat);



/****************************************************************************
* 名称：IRcvStr()
* 功能：向有子地址器件读取多字节数据。
* 入口参数：sla		器件地址
*          suba		器件子地址
*          s		数据接收缓冲区指针
*	   	   no 		读取数据个数
* 出口参数：返回值为0时表示操作出错，为1时表示操作正确。
* 说明：使用前要初始化好I2C引脚功能和I2C中断，并已使能I2C主模式
****************************************************************************/
extern  uint8  IRcvStr(uint8 sla, uint8 suba, uint8 *s, uint8 no);


#endif